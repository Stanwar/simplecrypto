{
    "project": {
        "name": "simplecrypto.js",
        "description": "Simple Crypto Library build on WebCrypto",
        "version": "0.0.3",
        "url": "https://github.com/encryb/simplecrypto",
        "logo": "https://www.encryb.com/img/crib-md.png"
    },
    "files": {
        "src\\simplecrypto.js": {
            "name": "src\\simplecrypto.js",
            "modules": {
                "simpleCrypto": 1
            },
            "classes": {
                "Key Storage": 1,
                "Encryption Asymmetric": 1,
                "Encryption Symmetric": 1,
                "Password-Based Key Derivation": 1,
                "Packaging": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "simpleCrypto": {
            "name": "simpleCrypto",
            "submodules": {},
            "classes": {
                "Key Storage": 1,
                "Encryption Asymmetric": 1,
                "Encryption Symmetric": 1,
                "Password-Based Key Derivation": 1,
                "Packaging": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\simplecrypto.js",
            "line": 1071,
            "description": "Simple Crypto Javascript library built on WebCrypto and IndexedDB"
        }
    },
    "classes": {
        "Key Storage": {
            "name": "Key Storage",
            "shortname": "Key Storage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "simpleCrypto",
            "namespace": "",
            "file": "src\\simplecrypto.js",
            "line": 607,
            "description": "Secure CryptoKey storage"
        },
        "Encryption Asymmetric": {
            "name": "Encryption Asymmetric",
            "shortname": "Encryption Asymmetric",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "simpleCrypto",
            "namespace": "",
            "file": "src\\simplecrypto.js",
            "line": 649,
            "description": "Asymmetric Encryption"
        },
        "Encryption Symmetric": {
            "name": "Encryption Symmetric",
            "shortname": "Encryption Symmetric",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "simpleCrypto",
            "namespace": "",
            "file": "src\\simplecrypto.js",
            "line": 871,
            "description": "Symmetric Encryption"
        },
        "Password-Based Key Derivation": {
            "name": "Password-Based Key Derivation",
            "shortname": "Password-Based Key Derivation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "simpleCrypto",
            "namespace": "",
            "file": "src\\simplecrypto.js",
            "line": 1037,
            "description": "Password-Based Key Derivation Function 2"
        },
        "Packaging": {
            "name": "Packaging",
            "shortname": "Packaging",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "simpleCrypto",
            "namespace": "",
            "file": "src\\simplecrypto.js",
            "line": 1071,
            "description": "Encoding/Decoding for encrypted data transport"
        }
    },
    "classitems": [
        {
            "file": "src\\simplecrypto.js",
            "line": 612,
            "description": "Get key from secure storage",
            "itemtype": "method",
            "name": "storage.get",
            "params": [
                {
                    "name": "keyId",
                    "description": "- Key Id",
                    "type": "String"
                },
                {
                    "name": "onError",
                    "description": "- called with error details if get fails",
                    "type": "Function"
                },
                {
                    "name": "onSuccess",
                    "description": "- called with CryptoKey if get succeeds",
                    "type": "Function"
                }
            ],
            "class": "Key Storage",
            "module": "simpleCrypto"
        },
        {
            "file": "src\\simplecrypto.js",
            "line": 623,
            "description": "Put key in secure storage",
            "itemtype": "method",
            "name": "storage.put",
            "params": [
                {
                    "name": "keyId",
                    "description": "- Key Id",
                    "type": "String"
                },
                {
                    "name": "key",
                    "description": "- key to be stored",
                    "type": "CryptoKey"
                },
                {
                    "name": "onError",
                    "description": "- called with error details if put fails",
                    "type": "Function"
                },
                {
                    "name": "onSuccess",
                    "description": "- called if put succeeds",
                    "type": "Function"
                }
            ],
            "class": "Key Storage",
            "module": "simpleCrypto"
        },
        {
            "file": "src\\simplecrypto.js",
            "line": 636,
            "description": "Delete key from secure storage",
            "itemtype": "method",
            "name": "storage.delete",
            "params": [
                {
                    "name": "keyId",
                    "description": "- Key Id",
                    "type": "String"
                },
                {
                    "name": "onError",
                    "description": "- called with error details if delete fails",
                    "type": "Function"
                },
                {
                    "name": "onSuccess",
                    "description": "- called if delete succeeds",
                    "type": "Function"
                }
            ],
            "class": "Key Storage",
            "module": "simpleCrypto"
        },
        {
            "file": "src\\simplecrypto.js",
            "line": 654,
            "description": "Generate RSA encryption and signature keys",
            "itemtype": "method",
            "name": "asym.generateKeys",
            "params": [
                {
                    "name": "onError",
                    "description": "- called with error details if generate fails",
                    "type": "Function"
                },
                {
                    "name": "onSuccess",
                    "description": "- called with {encrypt: ... , sign: ...} if generate succeeds",
                    "type": "Function"
                }
            ],
            "class": "Encryption Asymmetric",
            "module": "simpleCrypto"
        },
        {
            "file": "src\\simplecrypto.js",
            "line": 669,
            "description": "Import RSA encryption keys.",
            "itemtype": "method",
            "name": "asym.importEncryptKey",
            "params": [
                {
                    "name": "publicJwk",
                    "description": "- public (decrypt) JSON key",
                    "type": "Object"
                },
                {
                    "name": "privateJwk",
                    "description": "- private (encrypt) JSON key",
                    "type": "Object"
                },
                {
                    "name": "onError",
                    "description": "- called with error details if import fails",
                    "type": "Function"
                },
                {
                    "name": "onSuccess",
                    "description": "- called with {privateKey: CryptoKey, publicKey: CryptoKey, privateJwk: JWK, publicJwk: JWK}",
                    "type": "Function"
                }
            ],
            "class": "Encryption Asymmetric",
            "module": "simpleCrypto"
        },
        {
            "file": "src\\simplecrypto.js",
            "line": 687,
            "description": "Import RSA private encryption keys.",
            "itemtype": "method",
            "name": "asym.importEncryptPrivateKey",
            "params": [
                {
                    "name": "publicJwk",
                    "description": "- public (decrypt) JSON key",
                    "type": "Object"
                },
                {
                    "name": "privateJwk",
                    "description": "- private (encrypt) JSON key",
                    "type": "Object"
                },
                {
                    "name": "onError",
                    "description": "- called with error details if import fails",
                    "type": "Function"
                },
                {
                    "name": "onSuccess",
                    "description": "- called with privateKey CryptoKey",
                    "type": "Function"
                }
            ],
            "class": "Encryption Asymmetric",
            "module": "simpleCrypto"
        },
        {
            "file": "src\\simplecrypto.js",
            "line": 702,
            "description": "Import RSA public encryption keys.",
            "itemtype": "method",
            "name": "asym.importEncryptPublicKey",
            "params": [
                {
                    "name": "publicJwk",
                    "description": "- public (decrypt) JSON key",
                    "type": "Object"
                },
                {
                    "name": "onError",
                    "description": "- called with error details if import fails",
                    "type": "Function"
                },
                {
                    "name": "onSuccess",
                    "description": "- called with publicKey CryptoKey",
                    "type": "Function"
                }
            ],
            "class": "Encryption Asymmetric",
            "module": "simpleCrypto"
        },
        {
            "file": "src\\simplecrypto.js",
            "line": 716,
            "description": "Generate RSA encryption keys. Private CryptoKey is not exportable, and can be stored safely.",
            "itemtype": "method",
            "name": "asym.generateEncryptKey",
            "params": [
                {
                    "name": "onError",
                    "description": "- called with error details if generate fails",
                    "type": "Function"
                },
                {
                    "name": "onSuccess",
                    "description": "- called with {privateKey: CryptoKey, publicKey: CryptoKey, privateJwk: JWK, publicJwk: JWK}",
                    "type": "Function"
                }
            ],
            "class": "Encryption Asymmetric",
            "module": "simpleCrypto"
        },
        {
            "file": "src\\simplecrypto.js",
            "line": 739,
            "description": "Generate RSA signature keys. Private CryptoKey is not exportable, and can be stored safely.",
            "itemtype": "method",
            "name": "asym.generateSignKey",
            "params": [
                {
                    "name": "onError",
                    "description": "- called with error details if generate fails",
                    "type": "Function"
                },
                {
                    "name": "onSuccess",
                    "description": "- called with {privateKey: CryptoKey, publicKey: CryptoKey, privateJwk: JWK, publicJwk: JWK}",
                    "type": "Function"
                }
            ],
            "class": "Encryption Asymmetric",
            "module": "simpleCrypto"
        },
        {
            "file": "src\\simplecrypto.js",
            "line": 764,
            "description": "Decrypt. For large payloads, keys are RSA decrypted and content is AES decrypted. Otherwise, content is RSA decrypted.",
            "itemtype": "method",
            "name": "asym.decrypt",
            "params": [
                {
                    "name": "decryptKey",
                    "description": "- RSA encryption private key",
                    "type": "CryptoKey"
                },
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "onError",
                    "description": "- called with error details if decrypt fails",
                    "type": "Function"
                },
                {
                    "name": "onSuccess",
                    "description": "- called with decrypted ArrayBuffer",
                    "type": "Function"
                }
            ],
            "class": "Encryption Asymmetric",
            "module": "simpleCrypto"
        },
        {
            "file": "src\\simplecrypto.js",
            "line": 784,
            "description": "Verify and Decrypt. For large payloads, AES keys are RSA decrypted and content is AES decrypted. Otherwise, content is RSA decrypted.\nThe order of operations is: verify encrypted content/keys, decrypt, verify decrypted content/keys, AES decrypt (if required).",
            "itemtype": "method",
            "name": "asym.verifyAndDecrypt",
            "params": [
                {
                    "name": "decryptKey",
                    "description": "- RSA encryption private key",
                    "type": "CryptoKey"
                },
                {
                    "name": "decryptKey",
                    "description": "- RSA signature public key",
                    "type": "CryptoKey"
                },
                {
                    "name": "dict",
                    "description": "- decoded encrypted object {rsaEncrypted:, signatureOfEncrypted:, signatureOfData:, aesEncrypted?:, hmac?: }",
                    "type": "Object"
                },
                {
                    "name": "onError",
                    "description": "- called with error details if decrypt fails",
                    "type": "Function"
                },
                {
                    "name": "onSuccess",
                    "description": "- called with decrypted ArrayBuffer",
                    "type": "Function"
                }
            ],
            "class": "Encryption Asymmetric",
            "module": "simpleCrypto"
        },
        {
            "file": "src\\simplecrypto.js",
            "line": 810,
            "description": "Encrypt. For large payloads, the content is AES encrypted and keys are RSA encrypted. Otherwise, the content is RSA encrypted. \n\"Large\" trashhold is defined in config.",
            "itemtype": "method",
            "name": "asym.encrypt",
            "params": [
                {
                    "name": "encryptKey",
                    "description": "- RSA encryption public key",
                    "type": "CryptoKey"
                },
                {
                    "name": "data",
                    "description": "- Data to encrypt",
                    "type": "Uint8Array | ArrayBuffer"
                },
                {
                    "name": "onError",
                    "description": "- called with error details if encryption fails",
                    "type": "Function"
                },
                {
                    "name": "onSuccess",
                    "description": "- called with {rsaEncrypted: , aesEncrypted?: , hmacEncrypted?:}",
                    "type": "Function"
                }
            ],
            "class": "Encryption Asymmetric",
            "module": "simpleCrypto"
        },
        {
            "file": "src\\simplecrypto.js",
            "line": 834,
            "description": "Encrypt and Sign. For large payloads, the content is AES encrypted and keys are RSA encrypted. Otherwise, the content is RSA encrypted.\n\"Large\" trashhold is defined in config.\nThe order of operations is: AES (encrypt if required), encrypt content/keys, sign content/keys, sign encrypted content/keys.",
            "itemtype": "method",
            "name": "asym.encryptAndSign",
            "params": [
                {
                    "name": "decryptKey",
                    "description": "- RSA encryption private key",
                    "type": "CryptoKey"
                },
                {
                    "name": "decryptKey",
                    "description": "- RSA signature public key",
                    "type": "CryptoKey"
                },
                {
                    "name": "dict",
                    "description": "- decoded encrypted object {rsaEncrypted:, signatureOfEncrypted:, signatureOfData:, aesEncrypted?:, hmac?: }",
                    "type": "Object"
                },
                {
                    "name": "onError",
                    "description": "- called with error details if decrypt fails",
                    "type": "Function"
                },
                {
                    "name": "onSuccess",
                    "description": "- called with decrypted ArrayBuffer",
                    "type": "Function"
                }
            ],
            "class": "Encryption Asymmetric",
            "module": "simpleCrypto"
        },
        {
            "file": "src\\simplecrypto.js",
            "line": 877,
            "itemtype": "method",
            "name": "sym.generateKeys",
            "params": [
                {
                    "name": "onError",
                    "description": "- called with error details if the generation fails",
                    "type": "Function"
                },
                {
                    "name": "onSuccess",
                    "description": "- called with {aesKey: raw key, hmacKey: raw key, aesKeyObj: CryptoKey, hmacKeyObj: CryptoKey}",
                    "type": "Function"
                }
            ],
            "class": "Encryption Symmetric",
            "module": "simpleCrypto"
        },
        {
            "file": "src\\simplecrypto.js",
            "line": 898,
            "itemtype": "method",
            "name": "sym.importKeys",
            "params": [
                {
                    "name": "keys",
                    "description": "- {aesKey: raw key, hmacKey: raw key}. After import CryptoKeys aesKeyObj and hmacKeyObj are added to keys object.",
                    "type": "Object"
                },
                {
                    "name": "onError",
                    "description": "- called with error details if the import fails",
                    "type": "Function"
                },
                {
                    "name": "onSuccess",
                    "description": "- called without arguments once import completes",
                    "type": "Function"
                }
            ],
            "class": "Encryption Symmetric",
            "module": "simpleCrypto"
        },
        {
            "file": "src\\simplecrypto.js",
            "line": 927,
            "itemtype": "method",
            "name": "sym.genKeysAndEncrypt",
            "params": [
                {
                    "name": "data",
                    "description": "- Data to encrypt",
                    "type": "Uint8Array | ArrayBuffer"
                },
                {
                    "name": "onError",
                    "description": "- called with error details if key generation or encryption fail",
                    "type": "Function"
                },
                {
                    "name": "onSuccess",
                    "description": "- called with {keys: [see generateKeys output], data: [see encrypt output])",
                    "type": "Function"
                }
            ],
            "class": "Encryption Symmetric",
            "module": "simpleCrypto"
        },
        {
            "file": "src\\simplecrypto.js",
            "line": 942,
            "itemtype": "method",
            "name": "sym.encrypt",
            "params": [
                {
                    "name": "keys",
                    "description": "- AES and HMAC keys. Also optional IV (otherwise random is generated)",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "- Data to encrypt",
                    "type": "Uint8Array | ArrayBuffer"
                },
                {
                    "name": "onError",
                    "description": "- called with error details if key generation or encryption fail",
                    "type": "Function"
                },
                {
                    "name": "onSuccess",
                    "description": "- called with {aesEncrypted: ArrayBuffer, hmac: {ArrayBuffer}",
                    "type": "Function"
                }
            ],
            "class": "Encryption Symmetric",
            "module": "simpleCrypto"
        },
        {
            "file": "src\\simplecrypto.js",
            "line": 971,
            "itemtype": "method",
            "name": "sym.encryptWithPassword",
            "params": [
                {
                    "name": "password",
                    "description": "- Password used to generate AES and HMAC keys",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "- Data to encrypt",
                    "type": "Uint8Array | ArrayBuffer"
                },
                {
                    "name": "onError",
                    "description": "- called with error details if key generation or encryption fail",
                    "type": "Function"
                },
                {
                    "name": "onSuccess",
                    "description": "- called with {aesEncrypted: ArrayBuffer, hmac: {ArrayBuffer}",
                    "type": "Function"
                }
            ],
            "class": "Encryption Symmetric",
            "module": "simpleCrypto"
        },
        {
            "file": "src\\simplecrypto.js",
            "line": 994,
            "itemtype": "method",
            "name": "sym.decrypt",
            "params": [
                {
                    "name": "keys",
                    "description": "- AES and HMAC keys. Also optional IV (otherwise random is generated)",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "- Data to encrypt",
                    "type": "Uint8Array | ArrayBuffer"
                },
                {
                    "name": "onError",
                    "description": "- called with error details if key generation or encryption fail",
                    "type": "Function"
                },
                {
                    "name": "onSuccess",
                    "description": "- called with {aesEncrypted: ArrayBuffer, hmac: {ArrayBuffer}",
                    "type": "Function"
                }
            ],
            "class": "Encryption Symmetric",
            "module": "simpleCrypto"
        },
        {
            "file": "src\\simplecrypto.js",
            "line": 1013,
            "itemtype": "method",
            "name": "sym.decryptWithPassword",
            "params": [
                {
                    "name": "password",
                    "description": "- Password used to generate AES and HMAC keys",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "- Data to encrypt",
                    "type": "Uint8Array | ArrayBuffer"
                },
                {
                    "name": "onError",
                    "description": "- called with error details if key generation or encryption fail",
                    "type": "Function"
                },
                {
                    "name": "onSuccess",
                    "description": "- called with {aesEncrypted: ArrayBuffer, hmac: {ArrayBuffer}",
                    "type": "Function"
                }
            ],
            "class": "Encryption Symmetric",
            "module": "simpleCrypto"
        },
        {
            "file": "src\\simplecrypto.js",
            "line": 1043,
            "itemtype": "method",
            "name": "derive",
            "params": [
                {
                    "name": "password",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "bitLength",
                    "description": "- request lenght, in bits",
                    "type": "Int"
                },
                {
                    "name": "options",
                    "description": "- number of iterations and salt, if required. Autogenerated otherwise",
                    "type": "Object"
                },
                {
                    "name": "onError",
                    "description": "- called with error details if derive fails",
                    "type": "Function"
                },
                {
                    "name": "onSuccess",
                    "description": "- called with {salt: ArrayBuffer, interations: int, array: derived data}",
                    "type": "Function"
                }
            ],
            "class": "Password-Based Key Derivation",
            "module": "simpleCrypto"
        },
        {
            "file": "src\\simplecrypto.js",
            "line": 1097,
            "description": "Encode encrypted data",
            "itemtype": "method",
            "name": "pack.encode",
            "params": [
                {
                    "name": "dict",
                    "description": "- Keys depend on type of encryption, all values are ArrayBuffers (as returned by WebCrypto)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "- Encoded data",
                "type": "ArrayBuffer"
            },
            "class": "Packaging",
            "module": "simpleCrypto"
        },
        {
            "file": "src\\simplecrypto.js",
            "line": 1139,
            "description": "Decode encrypted data. Decoding should be a zero copy operation, since all returned Uint8Arrays point to the original buffer",
            "itemtype": "method",
            "name": "pack.decode",
            "params": [
                {
                    "name": "buffer",
                    "description": "- Encoded data",
                    "type": "ArrayBuffer"
                }
            ],
            "return": {
                "description": "- Keys depend on type of encryption, all values are Uint8Arrays",
                "type": "Object"
            },
            "class": "Packaging",
            "module": "simpleCrypto"
        }
    ],
    "warnings": [
        {
            "message": "param name missing: {Object}",
            "line": " src\\simplecrypto.js:764"
        }
    ]
}